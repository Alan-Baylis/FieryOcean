//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public BlueprintsComponent blueprints { get { return (BlueprintsComponent)GetComponent(BlueprintsComponentIds.Blueprints); } }
        public bool hasBlueprints { get { return HasComponent(BlueprintsComponentIds.Blueprints); } }

        public Entity AddBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
            var component = CreateComponent<BlueprintsComponent>(BlueprintsComponentIds.Blueprints);
            component.instance = newInstance;
            return AddComponent(BlueprintsComponentIds.Blueprints, component);
        }

        public Entity ReplaceBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
            var component = CreateComponent<BlueprintsComponent>(BlueprintsComponentIds.Blueprints);
            component.instance = newInstance;
            ReplaceComponent(BlueprintsComponentIds.Blueprints, component);
            return this;
        }

        public Entity RemoveBlueprints() {
            return RemoveComponent(BlueprintsComponentIds.Blueprints);
        }
    }

    public partial class Pool {

        public Entity blueprintsEntity { get { return GetGroup(BlueprintsMatcher.Blueprints).GetSingleEntity(); } }
        public BlueprintsComponent blueprints { get { return blueprintsEntity.blueprints; } }
        public bool hasBlueprints { get { return blueprintsEntity != null; } }

        public Entity SetBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
            if(hasBlueprints) {
                throw new EntitasException("Could not set blueprints!\n" + this + " already has an entity with BlueprintsComponent!",
                    "You should check if the pool already has a blueprintsEntity before setting it or use pool.ReplaceBlueprints().");
            }
            var entity = CreateEntity();
            entity.AddBlueprints(newInstance);
            return entity;
        }

        public Entity ReplaceBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
            var entity = blueprintsEntity;
            if(entity == null) {
                entity = SetBlueprints(newInstance);
            } else {
                entity.ReplaceBlueprints(newInstance);
            }

            return entity;
        }

        public void RemoveBlueprints() {
            DestroyEntity(blueprintsEntity);
        }
    }
}

    public partial class BlueprintsMatcher {

        static IMatcher _matcherBlueprints;

        public static IMatcher Blueprints {
            get {
                if(_matcherBlueprints == null) {
                    var matcher = (Matcher)Matcher.AllOf(BlueprintsComponentIds.Blueprints);
                    matcher.componentNames = BlueprintsComponentIds.componentNames;
                    _matcherBlueprints = matcher;
                }

                return _matcherBlueprints;
            }
        }
    }
