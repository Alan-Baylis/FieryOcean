//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EnemyViewComponent enemyView { get { return (EnemyViewComponent)GetComponent(GameComponentsLookup.EnemyView); } }
    public bool hasEnemyView { get { return HasComponent(GameComponentsLookup.EnemyView); } }

    public void AddEnemyView(IEnemyController newController) {
        var index = GameComponentsLookup.EnemyView;
        var component = CreateComponent<EnemyViewComponent>(index);
        component.controller = newController;
        AddComponent(index, component);
    }

    public void ReplaceEnemyView(IEnemyController newController) {
        var index = GameComponentsLookup.EnemyView;
        var component = CreateComponent<EnemyViewComponent>(index);
        component.controller = newController;
        ReplaceComponent(index, component);
    }

    public void RemoveEnemyView() {
        RemoveComponent(GameComponentsLookup.EnemyView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnemyView;

    public static Entitas.IMatcher<GameEntity> EnemyView {
        get {
            if (_matcherEnemyView == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemyView);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnemyView = matcher;
            }

            return _matcherEnemyView;
        }
    }
}
