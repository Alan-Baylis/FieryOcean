//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ServerImpOfUnitComponent serverImpOfUnit { get { return (ServerImpOfUnitComponent)GetComponent(GameComponentsLookup.ServerImpOfUnit); } }
    public bool hasServerImpOfUnit { get { return HasComponent(GameComponentsLookup.ServerImpOfUnit); } }

    public void AddServerImpOfUnit(KBEngine.Entity newEntity) {
        var index = GameComponentsLookup.ServerImpOfUnit;
        var component = CreateComponent<ServerImpOfUnitComponent>(index);
        component.entity = newEntity;
        AddComponent(index, component);
    }

    public void ReplaceServerImpOfUnit(KBEngine.Entity newEntity) {
        var index = GameComponentsLookup.ServerImpOfUnit;
        var component = CreateComponent<ServerImpOfUnitComponent>(index);
        component.entity = newEntity;
        ReplaceComponent(index, component);
    }

    public void RemoveServerImpOfUnit() {
        RemoveComponent(GameComponentsLookup.ServerImpOfUnit);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherServerImpOfUnit;

    public static Entitas.IMatcher<GameEntity> ServerImpOfUnit {
        get {
            if (_matcherServerImpOfUnit == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ServerImpOfUnit);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherServerImpOfUnit = matcher;
            }

            return _matcherServerImpOfUnit;
        }
    }
}
