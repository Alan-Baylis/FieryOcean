//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity blueprintsEntity { get { return GetGroup(GameMatcher.Blueprints).GetSingleEntity(); } }
    public BlueprintsComponent blueprints { get { return blueprintsEntity.blueprints; } }
    public bool hasBlueprints { get { return blueprintsEntity != null; } }

    public GameEntity SetBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
        if (hasBlueprints) {
            throw new Entitas.EntitasException("Could not set Blueprints!\n" + this + " already has an entity with BlueprintsComponent!",
                "You should check if the context already has a blueprintsEntity before setting it or use context.ReplaceBlueprints().");
        }
        var entity = CreateEntity();
        entity.AddBlueprints(newInstance);
        return entity;
    }

    public void ReplaceBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
        var entity = blueprintsEntity;
        if (entity == null) {
            entity = SetBlueprints(newInstance);
        } else {
            entity.ReplaceBlueprints(newInstance);
        }
    }

    public void RemoveBlueprints() {
        blueprintsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BlueprintsComponent blueprints { get { return (BlueprintsComponent)GetComponent(GameComponentsLookup.Blueprints); } }
    public bool hasBlueprints { get { return HasComponent(GameComponentsLookup.Blueprints); } }

    public void AddBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
        var index = GameComponentsLookup.Blueprints;
        var component = CreateComponent<BlueprintsComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceBlueprints(Entitas.Unity.Serialization.Blueprints.Blueprints newInstance) {
        var index = GameComponentsLookup.Blueprints;
        var component = CreateComponent<BlueprintsComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveBlueprints() {
        RemoveComponent(GameComponentsLookup.Blueprints);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBlueprints;

    public static Entitas.IMatcher<GameEntity> Blueprints {
        get {
            if (_matcherBlueprints == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Blueprints);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBlueprints = matcher;
            }

            return _matcherBlueprints;
        }
    }
}
